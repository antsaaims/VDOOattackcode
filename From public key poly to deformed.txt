
/* ---------------------------------------------------------
 Given a set of public key polynomials 
 generate the deformed matrices. This is used when 
 forging other people'ssignatures
------------------------------------------------------------*/
q:= 37;
m:= 3 ;
n:= 5;
GF :=GaloisField(q);
P<[y]> := PolynomialRing(GF,n);
Pol<[x]>:=PolynomialRing(P,n);
//Change this to your public key polynomial

Pk:= [
    20*x[1]^2 + 21*x[1]*x[2] + 35*x[1]*x[3] + 6*x[1]*x[4] + 17*x[1]*x[5] +
        26*x[2]^2 + 18*x[2]*x[3] + 23*x[2]*x[4] + 25*x[2]*x[5] + 2*x[3]^2 +
        3*x[3]*x[4] + 34*x[3]*x[5] + 29*x[4]^2 + 30*x[4]*x[5] + 29*x[5]^2,

    14*x[1]^2 + 28*x[1]*x[2] + 35*x[1]*x[3] + 19*x[1]*x[4] + 21*x[1]*x[5] +
        32*x[2]^2 + 11*x[2]*x[3] + 5*x[2]*x[4] + 19*x[2]*x[5] + 13*x[3]^2 +
        21*x[3]*x[4] + 7*x[3]*x[5] + 25*x[4]^2 + 7*x[4]*x[5] + 34*x[5]^2,

    10*x[1]^2 + 19*x[1]*x[2] + 18*x[1]*x[3] + 13*x[1]*x[4] + 7*x[1]*x[5] +
        22*x[2]^2 + 18*x[2]*x[4] + 31*x[3]^2 + 21*x[3]*x[4] + 22*x[3]*x[5] +
        28*x[4]^2 + 15*x[4]*x[5] + 29*x[5]^2
];

Hashspace:=VectorSpace(GF,m);
Signspace:= VectorSpace(GF,n);

// creating the basis vectors

basis_vectors := [ Signspace!([ i eq j select 1 else 0 : j in [1..n] ]) 
    : i in [1..n]
];
//basis_vectors;
yvar :=   Vector(([P.i: i in [1..n]]));
 
Pprimelist:= [Vector(Evaluate( Pk, Eltseq(yvar + basis_vectors [i] ))) 
             - Vector(Evaluate( Pk, Eltseq( basis_vectors [i] )))
             -Vector(Evaluate( Pk, Eltseq(yvar  ))): i in [1..n]];
Qdeformed := [Matrix([Evaluate( Pprimelist[i], Eltseq(basis_vectors [j])): i in [1..n]]):j in [1..n]];
Qdeformed 

